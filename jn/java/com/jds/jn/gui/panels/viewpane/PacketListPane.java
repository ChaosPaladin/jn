package com.jds.jn.gui.panels.viewpane;

import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ResourceBundle;

import javax.swing.ButtonGroup;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.KeyStroke;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.jds.jn.gui.panels.ViewPane;
import com.jds.jn.gui.panels.viewpane.packetlist.CryptedPacketListPane;
import com.jds.jn.gui.panels.viewpane.packetlist.DecryptedPacketListPane;
import com.jds.jn.gui.panels.viewpane.packetlist.UnknownPacketListPane;

/**
 * Author: VISTALL
 * Company: J Develop Station
 * Date: Sep 29, 2009
 * Time: 10:00:48 PM
 */
public class PacketListPane extends HiddenPanel
{
	private class ShowPaneActionListenerImpl implements ActionListener
	{
		private JPanel _val;

		public ShowPaneActionListenerImpl(JPanel val)
		{
			_val = val;
		}

		@Override
		public void actionPerformed(ActionEvent e)
		{
			showPane(_val);
		}
	}

	private JPanel root;
	private CryptedPacketListPane _cryptedPacketListPane;
	private DecryptedPacketListPane _decryptedPacketListPane;
	private UnknownPacketListPane _unknownPacketListPane;

	public PacketListPane(ViewPane pane)
	{
		$$$setupUI$$$();

		_cryptedPacketListPane = new CryptedPacketListPane(pane);
		_decryptedPacketListPane = new DecryptedPacketListPane(pane);
		_unknownPacketListPane = new UnknownPacketListPane(pane);

		add(_decryptedPacketListPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		add(_cryptedPacketListPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		add(_unknownPacketListPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));

		final JPopupMenu popupMenu = new JPopupMenu();

		ButtonGroup group = new ButtonGroup();
		JRadioButton radio = new JRadioButton(ResourceBundle.getBundle("com/jds/jn/resources/bundle/LanguageBundle").getString("DecodeList"));
		radio.addActionListener(new ShowPaneActionListenerImpl(_decryptedPacketListPane));
		group.add(radio);
		popupMenu.add(radio);

		radio = new JRadioButton(ResourceBundle.getBundle("com/jds/jn/resources/bundle/LanguageBundle").getString("NotDecodeList"));
		radio.addActionListener(new ShowPaneActionListenerImpl(_cryptedPacketListPane));
		group.add(radio);
		popupMenu.add(radio);

		radio = new JRadioButton("Unknown Packet List");
		radio.addActionListener(new ShowPaneActionListenerImpl(_unknownPacketListPane));
		group.add(radio);
		popupMenu.add(radio);

		registerKeyboardAction(new ActionListener()
		{
			@Override
			public void actionPerformed(ActionEvent e)
			{
				popupMenu.show(PacketListPane.this, 0, 0);
			}
		}, KeyStroke.getKeyStroke(KeyEvent.VK_Q, InputEvent.CTRL_MASK), JComponent.WHEN_IN_FOCUSED_WINDOW);

		addMouseListener(new MouseAdapter()
		{

			@Override
			public void mouseClicked(MouseEvent e)
			{
				if(e.getButton() == MouseEvent.BUTTON3)
					popupMenu.show(PacketListPane.this, e.getX(), e.getY());
			}
		});
	}

	@Override
	public void setEnabled(boolean b)
	{
		_decryptedPacketListPane.setEnabled(b);
		_cryptedPacketListPane.setEnabled(b);

		super.setEnabled(b);
	}

	public DecryptedPacketListPane getDecryptedPacketListPane()
	{
		return _decryptedPacketListPane;
	}

	public CryptedPacketListPane getCryptedPacketListPane()
	{
		return _cryptedPacketListPane;
	}

	public UnknownPacketListPane getUnknownPacketListPane()
	{
		return _unknownPacketListPane;
	}

	public void showPane(JPanel panel)
	{
		_decryptedPacketListPane.setVisible(false);
		_cryptedPacketListPane.setVisible(false);
		_unknownPacketListPane.setVisible(false);

		panel.setVisible(true);
	}

	private void createUIComponents()
	{
		root = this;
		setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		createUIComponents();
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return root;
	}

}
