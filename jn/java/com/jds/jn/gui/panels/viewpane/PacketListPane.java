package com.jds.jn.gui.panels.viewpane;

import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.ButtonGroup;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.KeyStroke;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.jds.jn.gui.panels.ViewPane;
import com.jds.jn.gui.panels.viewpane.packetlist.CryptedPacketListPane;
import com.jds.jn.gui.panels.viewpane.packetlist.DecryptedPacketListPane;
import com.jds.jn.gui.panels.viewpane.packetlist.PacketListPanel;
import com.jds.jn.gui.panels.viewpane.packetlist.UnknownPacketListPane;
import com.jds.jn.util.Bundle;

/**
 * Author: VISTALL
 * Company: J Develop Station
 * Date: Sep 29, 2009
 * Time: 10:00:48 PM
 */
public class PacketListPane extends HiddenPanel
{
	private static final String[] NAMES = new String[]{
			"CryptedPacketList",
			"DecodePacketList",
			"UnknownPacketList"
	};

	private class ShowPaneActionListenerImpl implements ActionListener
	{
		private PacketListPanel<?> _val;

		public ShowPaneActionListenerImpl(PacketListPanel<?> val)
		{
			_val = val;
		}

		@Override
		public void actionPerformed(ActionEvent e)
		{
			setSelectedPanel(_val);
		}
	}

	private JPanel root;

	private PacketListPanel[] _panels = new PacketListPanel[3];

	private PacketListPanel<?> _selectedPanel;

	public PacketListPane(ViewPane pane)
	{
		$$$setupUI$$$();

		_panels[0] = new CryptedPacketListPane(pane);
		_panels[1] = new DecryptedPacketListPane(pane);
		_panels[2] = new UnknownPacketListPane(pane);

		final JPopupMenu popupMenu = new JPopupMenu();

		ButtonGroup group = new ButtonGroup();

		for(int i = 0; i < _panels.length; i++)
		{
			PacketListPanel p = _panels[i];

			JRadioButton radio = new JRadioButton(Bundle.getString(NAMES[i]));
			radio.addActionListener(new ShowPaneActionListenerImpl(p));
			group.add(radio);
			popupMenu.add(radio);

			p.setRadioButton(radio);
			p.setVisible(false);
			add(p, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		}

		registerKeyboardAction(new ActionListener()
		{
			@Override
			public void actionPerformed(ActionEvent e)
			{
				popupMenu.show(PacketListPane.this, 0, 0);
			}
		}, KeyStroke.getKeyStroke(KeyEvent.VK_Q, InputEvent.CTRL_MASK), JComponent.WHEN_IN_FOCUSED_WINDOW);

		addMouseListener(new MouseAdapter()
		{
			@Override
			public void mouseClicked(MouseEvent e)
			{
				if(e.getButton() == MouseEvent.BUTTON3)
					popupMenu.show(PacketListPane.this, e.getX(), e.getY());
			}
		});
	}

	@Override
	public void setEnabled(boolean b)
	{
		for(JPanel p : _panels)
			p.setEnabled(b);

		super.setEnabled(b);
	}

	@Override
	public void refresh()
	{
		if(_selectedPanel == null)
			for(PacketListPanel<?> p : _panels)
				if(p.getModel().size() > 0)
				{
					setSelectedPanel(p);
					break;
				}

		if(_selectedPanel == null)
			setSelectedPanel(_panels[0]);

		getSelectedPanel().getModel().refresh();
	}

	public DecryptedPacketListPane getDecryptedPacketListPane()
	{
		return (DecryptedPacketListPane) _panels[1];
	}

	public CryptedPacketListPane getCryptedPacketListPane()
	{
		return (CryptedPacketListPane) _panels[0];
	}

	public UnknownPacketListPane getUnknownPacketListPane()
	{
		return (UnknownPacketListPane) _panels[2];
	}

	public void setSelectedPanel(PacketListPanel<?> p)
	{
		PacketListPanel<?> old = _selectedPanel;
		if(old != null)
		{
			old.getRadioButton().setSelected(false);
			old.setVisible(false);
		}

		p.getRadioButton().setSelected(true);
		p.setVisible(true);
		_selectedPanel = p;
	}

	public PacketListPanel<?> getSelectedPanel()
	{
		return _selectedPanel;
	}

	private void createUIComponents()
	{
		root = this;
		setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		createUIComponents();
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return root;
	}
}
